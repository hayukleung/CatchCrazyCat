apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.fernandocejas.frodo'
apply plugin: 'me.tatarka.retrolambda'

repositories {
  flatDir {
    dirs 'libs'
  }
}

android {
  compileSdkVersion rootProject.ext.compileSdkVersion
  buildToolsVersion rootProject.ext.buildToolsVersion

  defaultConfig {
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion

    applicationId "com.hayukleung.catchcrazycat"
    versionCode 1
    versionName "0.0.1"

    buildConfigField "int", "serviceEnvironment", "0" // 正式环境

    multiDexEnabled true
  }

  applicationVariants.all { variant ->
    // EXP:
    // variant.buildConfigField "[type]", "[name]", "[value]"
    // variant.resValue "[type]", "[name]", "[value]"
    variant.buildConfigField "String", "BUGLY_APP_ID", "\"900023033\""
    variant.buildConfigField "String", "BUGTAGS_APP_ID", "\"395aae5d7a06ab4d40fb9f4ff881cc76\""
  }

  signingConfigs {
    hayukleung {
      keyAlias 'hayukleung'
      keyPassword 'hayukleung'
      storeFile file('./hayukleung.jks')
      storePassword 'hayukleung'
    }
  }

  buildTypes {
    release {
      minifyEnabled true
      shrinkResources true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro',
          'annotations.pro'
      signingConfig signingConfigs.hayukleung
      ndk {
        abiFilters "armeabi"
      }
    }
    debug {
      minifyEnabled false
      shrinkResources false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro',
          'annotations.pro'
      signingConfig signingConfigs.hayukleung
      ndk {
        abiFilters "armeabi", "x86"
      }
    }
  }

  lintOptions {
    checkReleaseBuilds true
    abortOnError false
    disable 'InvalidPackage'
    lintConfig file('lint.xml')
  }

  testOptions {
    unitTests.returnDefaultValues = true
    unitTests.all {
      // All the usual Gradle options.
      maxHeapSize = '2048m'
    }
  }

  dexOptions {
    javaMaxHeapSize "4g"
  }

  packagingOptions {
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/NOTICE.txt'
  }
  productFlavors {
    product_test {
      buildConfigField "int", "serviceEnvironment", "1" // 测试环境
      manifestPlaceholders = [UMENG_APPKEY: ""]
    }
    product_dev {
      buildConfigField "int", "serviceEnvironment", "2" // 开发环境
      manifestPlaceholders = [UMENG_APPKEY: ""]
    }
    product_fac {}
    yinyongbao {
      manifestPlaceholders = [CHANNEL_VALUE: "yingyongbao"]
    }
    xiaomi {
      manifestPlaceholders = [CHANNEL_VALUE: "xiaomi"]
    }
    _360 {
      manifestPlaceholders = [CHANNEL_VALUE: "360"]
    }
    wandoujia {
      manifestPlaceholders = [CHANNEL_VALUE: "wandoujia"]
    }
    baidu {
      manifestPlaceholders = [CHANNEL_VALUE: "baidu"]
    }
    google {
      manifestPlaceholders = [CHANNEL_VALUE: "google"]
    }
    huawei {
      manifestPlaceholders = [CHANNEL_VALUE: "huawei"]
    }
  }
  compileOptions {
    sourceCompatibility rootProject.ext.javaVersion_retrolambda
    targetCompatibility rootProject.ext.javaVersion_retrolambda
  }
}

dependencies {
  // test start
  //  testCompile "junit:junit:${JUNIT_VERSION}"
  //  testCompile "com.google.guava:guava-testlib:${GUAVA_TESTLIB}"
  //  testCompile "com.google.truth:truth:${TRUTH_VERSION}"
  //  testCompile "org.mockito:mockito-core:${MOCKITO_VERSION}"
  //  testCompile "org.robolectric:robolectric:${ROBOLECTRIC_VERSION}"
  //  testCompile "com.squareup.okhttp3:mockwebserver:${MOCKWEBSERVER_VERSION}"
  //  testCompile "org.ow2.asm:asm:${ASM_VERSION}"
  testCompile "com.android.support:support-v4:${SUPPORT_V4_VERSION}"
  // test end

  compile fileTree(dir: 'libs', include: ['*.jar'])
  provided project(':core:proguard-annotations')
  compile project(':core:base')
  //  compile project(':integration:sharesdk')
  //  compile project(':integration:amap')
  //  compile project(':integration:amap_navi')
  //  compile project(':integration:bdpush')
  //  compile project(':integration:pingpp')
  //  compile project(':integration:zbar')
  //  compile project(':integration:viewpagerindicator')
  //  compile project(':integration:glide-okhttp3')
  //  compile project(':integration:flexible-adapter')
  //  compile project(':integration:emojicon')
  compile project(':integration:dialogplus')

  compile "com.android.support:multidex:${MULTIDEX_VERSION}"
  compile "com.android.support:appcompat-v7:${APPCOMPAT_V7_VERSION}"
  compile "com.android.support:recyclerview-v7:${RECYCLERVIEW_V7_VERSION}"
  compile "com.android.support:design:${DESIGN_VERSION}"

  // http://bugly.qq.com/androidfast
  //  compile "com.tencent.bugly:crashreport:${BUGLY_VERSION}"
  //  compile "com.bugtags.library:bugtags-lib:${BUGTAGS_LIB_VERSION}"

  // icepick (https://github.com/frankiesardo/icepick)
  //  compile "frankiesardo:icepick:${ICEPICK_VERSION}"
  //  provided "frankiesardo:icepick-processor:${ICEPICK_PROCESSOR_VERSION}"

  //
  compile "com.jakewharton:butterknife:${BUTTERKNIFE_VERSION}"

  // https://github.com/ReactiveX/RxAndroid
  //  compile "io.reactivex:rxandroid:${RXANDROID_VERSION}"
  //  compile "io.reactivex:rxjava:${RXJAVA_VERSION}"
  // https://github.com/JakeWharton/RxBinding
  // Platform bindings:
  //  compile "com.jakewharton.rxbinding:rxbinding:${RXBINDING_VERSION}"
  // 'support-v4' library bindings:
  //  compile "com.jakewharton.rxbinding:rxbinding-support-v4:${RXBINDING_SUPPORT_VERSION}"
  // 'appcompat-v7' library bindings:
  //  compile "com.jakewharton.rxbinding:rxbinding-appcompat-v7:${RXBINDING_APPCOMPAT_VERSION}"
  // 'design' library bindings:
  //  compile "com.jakewharton.rxbinding:rxbinding-design:${RXBINDING_DESIGN_VERSION}"
  // 'recyclerview-v7' library bindings:
  //  compile "com.jakewharton.rxbinding:rxbinding-recyclerview-v7:${RXBINDING_RECYCLERVIEW_VERSION}"
  // 'leanback-v17' library bindings:
  // compile "com.jakewharton.rxbinding:rxbinding-leanback-v17:${RXBINDING_LEANBACK_VERSION}"

  // https://github.com/trello/RxLifecycle
  //  compile "com.trello:rxlifecycle:${RXLIFECYCLE_VERSION}"
  // If you want pre-written Activities and Fragments you can subclass as providers
  //  compile "com.trello:rxlifecycle-components:${RXLIFECYCLE_COMPONENTS_VERSION}"

  // https://github.com/square/retrofit
  //  compile "com.squareup.retrofit2:retrofit:${RETROFIT_VERSION}"
  //  compile "com.squareup.retrofit2:converter-gson:${CONVERTER_GSON_VERSION}"
  //  compile "com.squareup.retrofit2:adapter-rxjava:${ADAPTER_RXJAVA_VERSION}"

  // Dagger 2 and Compiler (http://stackoverflow.com/questions/28661693/dagger2-dependency-gradle)
  //  compile "com.google.dagger:dagger:${DAGGER_VERSION}"
  //  apt "com.google.dagger:dagger-compiler:${DAGGER_COMPILER_VERSION}"
  // Needed for @Generated annotation (missing in Java <= 1.6; therefore, Android)
  // compile 'javax.annotation:jsr250-api:1.0'

  //  compile "com.github.bumptech.glide:glide:${GLIDE_VERSION}"
  //  compile "jp.wasabeef:glide-transformations:${GLIDE_TRANSFORMATIONS_VERSION}"
  // If you want to use the GPU Filters
  //  compile "jp.co.cyberagent.android.gpuimage:gpuimage-library:${GUPIMAGE_LIBRARY_VERSION}"

  //  debugCompile "com.squareup.leakcanary:leakcanary-android:${LEAKCANARY_VERSION}"
  //  releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:${LEAKCANARY__NO_OP_VERSION}"
  //  testCompile "com.squareup.leakcanary:leakcanary-android-no-op:${LEAKCANARY__NO_OP_VERSION}"

  //  compile "com.github.chrisbanes.photoview:library:${PHOTOVIEW_VERSION}"

  // https://github.com/danylovolokh/VideoPlayerManager (在列表中播放视频)
  //  compile "com.github.danylovolokh:video-player-manager:${VIDEO_PLAYER_MANAGER_VERSION}"

  // https://github.com/wasabeef/recyclerview-animators
  //  compile "jp.wasabeef:recyclerview-animators:${RECYCLERVIEW_ANIMATORS_VERSION}"

  // https://github.com/ybq/Android-SpinKit
  //  compile "com.github.ybq:Android-SpinKit:${ANDROID_SPINKIT_VERSION}"
}
